/*
 * This file is generated by jOOQ.
 */
package com.jooq.example.domain.tables.records;


import com.jooq.example.domain.tables.Products;

import java.math.BigDecimal;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductsRecord extends UpdatableRecordImpl<ProductsRecord> implements Record14<String, Integer, String, String, String, BigDecimal, BigDecimal, Integer, Integer, String, Byte, Integer, String, byte[]> {

    private static final long serialVersionUID = -361537381;

    /**
     * Setter for <code>northwind.products.supplier_ids</code>.
     */
    public void setSupplierIds(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>northwind.products.supplier_ids</code>.
     */
    public String getSupplierIds() {
        return (String) get(0);
    }

    /**
     * Setter for <code>northwind.products.id</code>.
     */
    public void setId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>northwind.products.id</code>.
     */
    public Integer getId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>northwind.products.product_code</code>.
     */
    public void setProductCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>northwind.products.product_code</code>.
     */
    public String getProductCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>northwind.products.product_name</code>.
     */
    public void setProductName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>northwind.products.product_name</code>.
     */
    public String getProductName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>northwind.products.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>northwind.products.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>northwind.products.standard_cost</code>.
     */
    public void setStandardCost(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>northwind.products.standard_cost</code>.
     */
    public BigDecimal getStandardCost() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>northwind.products.list_price</code>.
     */
    public void setListPrice(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>northwind.products.list_price</code>.
     */
    public BigDecimal getListPrice() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>northwind.products.reorder_level</code>.
     */
    public void setReorderLevel(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>northwind.products.reorder_level</code>.
     */
    public Integer getReorderLevel() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>northwind.products.target_level</code>.
     */
    public void setTargetLevel(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>northwind.products.target_level</code>.
     */
    public Integer getTargetLevel() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>northwind.products.quantity_per_unit</code>.
     */
    public void setQuantityPerUnit(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>northwind.products.quantity_per_unit</code>.
     */
    public String getQuantityPerUnit() {
        return (String) get(9);
    }

    /**
     * Setter for <code>northwind.products.discontinued</code>.
     */
    public void setDiscontinued(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>northwind.products.discontinued</code>.
     */
    public Byte getDiscontinued() {
        return (Byte) get(10);
    }

    /**
     * Setter for <code>northwind.products.minimum_reorder_quantity</code>.
     */
    public void setMinimumReorderQuantity(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>northwind.products.minimum_reorder_quantity</code>.
     */
    public Integer getMinimumReorderQuantity() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>northwind.products.category</code>.
     */
    public void setCategory(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>northwind.products.category</code>.
     */
    public String getCategory() {
        return (String) get(12);
    }

    /**
     * Setter for <code>northwind.products.attachments</code>.
     */
    public void setAttachments(byte... value) {
        set(13, value);
    }

    /**
     * Getter for <code>northwind.products.attachments</code>.
     */
    public byte[] getAttachments() {
        return (byte[]) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, Integer, String, String, String, BigDecimal, BigDecimal, Integer, Integer, String, Byte, Integer, String, byte[]> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<String, Integer, String, String, String, BigDecimal, BigDecimal, Integer, Integer, String, Byte, Integer, String, byte[]> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Products.PRODUCTS.SUPPLIER_IDS;
    }

    @Override
    public Field<Integer> field2() {
        return Products.PRODUCTS.ID;
    }

    @Override
    public Field<String> field3() {
        return Products.PRODUCTS.PRODUCT_CODE;
    }

    @Override
    public Field<String> field4() {
        return Products.PRODUCTS.PRODUCT_NAME;
    }

    @Override
    public Field<String> field5() {
        return Products.PRODUCTS.DESCRIPTION;
    }

    @Override
    public Field<BigDecimal> field6() {
        return Products.PRODUCTS.STANDARD_COST;
    }

    @Override
    public Field<BigDecimal> field7() {
        return Products.PRODUCTS.LIST_PRICE;
    }

    @Override
    public Field<Integer> field8() {
        return Products.PRODUCTS.REORDER_LEVEL;
    }

    @Override
    public Field<Integer> field9() {
        return Products.PRODUCTS.TARGET_LEVEL;
    }

    @Override
    public Field<String> field10() {
        return Products.PRODUCTS.QUANTITY_PER_UNIT;
    }

    @Override
    public Field<Byte> field11() {
        return Products.PRODUCTS.DISCONTINUED;
    }

    @Override
    public Field<Integer> field12() {
        return Products.PRODUCTS.MINIMUM_REORDER_QUANTITY;
    }

    @Override
    public Field<String> field13() {
        return Products.PRODUCTS.CATEGORY;
    }

    @Override
    public Field<byte[]> field14() {
        return Products.PRODUCTS.ATTACHMENTS;
    }

    @Override
    public String component1() {
        return getSupplierIds();
    }

    @Override
    public Integer component2() {
        return getId();
    }

    @Override
    public String component3() {
        return getProductCode();
    }

    @Override
    public String component4() {
        return getProductName();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public BigDecimal component6() {
        return getStandardCost();
    }

    @Override
    public BigDecimal component7() {
        return getListPrice();
    }

    @Override
    public Integer component8() {
        return getReorderLevel();
    }

    @Override
    public Integer component9() {
        return getTargetLevel();
    }

    @Override
    public String component10() {
        return getQuantityPerUnit();
    }

    @Override
    public Byte component11() {
        return getDiscontinued();
    }

    @Override
    public Integer component12() {
        return getMinimumReorderQuantity();
    }

    @Override
    public String component13() {
        return getCategory();
    }

    @Override
    public byte[] component14() {
        return getAttachments();
    }

    @Override
    public String value1() {
        return getSupplierIds();
    }

    @Override
    public Integer value2() {
        return getId();
    }

    @Override
    public String value3() {
        return getProductCode();
    }

    @Override
    public String value4() {
        return getProductName();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public BigDecimal value6() {
        return getStandardCost();
    }

    @Override
    public BigDecimal value7() {
        return getListPrice();
    }

    @Override
    public Integer value8() {
        return getReorderLevel();
    }

    @Override
    public Integer value9() {
        return getTargetLevel();
    }

    @Override
    public String value10() {
        return getQuantityPerUnit();
    }

    @Override
    public Byte value11() {
        return getDiscontinued();
    }

    @Override
    public Integer value12() {
        return getMinimumReorderQuantity();
    }

    @Override
    public String value13() {
        return getCategory();
    }

    @Override
    public byte[] value14() {
        return getAttachments();
    }

    @Override
    public ProductsRecord value1(String value) {
        setSupplierIds(value);
        return this;
    }

    @Override
    public ProductsRecord value2(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ProductsRecord value3(String value) {
        setProductCode(value);
        return this;
    }

    @Override
    public ProductsRecord value4(String value) {
        setProductName(value);
        return this;
    }

    @Override
    public ProductsRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ProductsRecord value6(BigDecimal value) {
        setStandardCost(value);
        return this;
    }

    @Override
    public ProductsRecord value7(BigDecimal value) {
        setListPrice(value);
        return this;
    }

    @Override
    public ProductsRecord value8(Integer value) {
        setReorderLevel(value);
        return this;
    }

    @Override
    public ProductsRecord value9(Integer value) {
        setTargetLevel(value);
        return this;
    }

    @Override
    public ProductsRecord value10(String value) {
        setQuantityPerUnit(value);
        return this;
    }

    @Override
    public ProductsRecord value11(Byte value) {
        setDiscontinued(value);
        return this;
    }

    @Override
    public ProductsRecord value12(Integer value) {
        setMinimumReorderQuantity(value);
        return this;
    }

    @Override
    public ProductsRecord value13(String value) {
        setCategory(value);
        return this;
    }

    @Override
    public ProductsRecord value14(byte... value) {
        setAttachments(value);
        return this;
    }

    @Override
    public ProductsRecord values(String value1, Integer value2, String value3, String value4, String value5, BigDecimal value6, BigDecimal value7, Integer value8, Integer value9, String value10, Byte value11, Integer value12, String value13, byte[] value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductsRecord
     */
    public ProductsRecord() {
        super(Products.PRODUCTS);
    }

    /**
     * Create a detached, initialised ProductsRecord
     */
    public ProductsRecord(String supplierIds, Integer id, String productCode, String productName, String description, BigDecimal standardCost, BigDecimal listPrice, Integer reorderLevel, Integer targetLevel, String quantityPerUnit, Byte discontinued, Integer minimumReorderQuantity, String category, byte[] attachments) {
        super(Products.PRODUCTS);

        set(0, supplierIds);
        set(1, id);
        set(2, productCode);
        set(3, productName);
        set(4, description);
        set(5, standardCost);
        set(6, listPrice);
        set(7, reorderLevel);
        set(8, targetLevel);
        set(9, quantityPerUnit);
        set(10, discontinued);
        set(11, minimumReorderQuantity);
        set(12, category);
        set(13, attachments);
    }
}
