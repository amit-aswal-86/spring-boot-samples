/*
 * This file is generated by jOOQ.
 */
package com.jooq.example.domain.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InventoryTransactions implements Serializable {

    private static final long serialVersionUID = 341093268;

    private Integer   id;
    private Byte      transactionType;
    private Timestamp transactionCreatedDate;
    private Timestamp transactionModifiedDate;
    private Integer   productId;
    private Integer   quantity;
    private Integer   purchaseOrderId;
    private Integer   customerOrderId;
    private String    comments;

    public InventoryTransactions() {}

    public InventoryTransactions(InventoryTransactions value) {
        this.id = value.id;
        this.transactionType = value.transactionType;
        this.transactionCreatedDate = value.transactionCreatedDate;
        this.transactionModifiedDate = value.transactionModifiedDate;
        this.productId = value.productId;
        this.quantity = value.quantity;
        this.purchaseOrderId = value.purchaseOrderId;
        this.customerOrderId = value.customerOrderId;
        this.comments = value.comments;
    }

    public InventoryTransactions(
        Integer   id,
        Byte      transactionType,
        Timestamp transactionCreatedDate,
        Timestamp transactionModifiedDate,
        Integer   productId,
        Integer   quantity,
        Integer   purchaseOrderId,
        Integer   customerOrderId,
        String    comments
    ) {
        this.id = id;
        this.transactionType = transactionType;
        this.transactionCreatedDate = transactionCreatedDate;
        this.transactionModifiedDate = transactionModifiedDate;
        this.productId = productId;
        this.quantity = quantity;
        this.purchaseOrderId = purchaseOrderId;
        this.customerOrderId = customerOrderId;
        this.comments = comments;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Byte getTransactionType() {
        return this.transactionType;
    }

    public void setTransactionType(Byte transactionType) {
        this.transactionType = transactionType;
    }

    public Timestamp getTransactionCreatedDate() {
        return this.transactionCreatedDate;
    }

    public void setTransactionCreatedDate(Timestamp transactionCreatedDate) {
        this.transactionCreatedDate = transactionCreatedDate;
    }

    public Timestamp getTransactionModifiedDate() {
        return this.transactionModifiedDate;
    }

    public void setTransactionModifiedDate(Timestamp transactionModifiedDate) {
        this.transactionModifiedDate = transactionModifiedDate;
    }

    public Integer getProductId() {
        return this.productId;
    }

    public void setProductId(Integer productId) {
        this.productId = productId;
    }

    public Integer getQuantity() {
        return this.quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    public Integer getPurchaseOrderId() {
        return this.purchaseOrderId;
    }

    public void setPurchaseOrderId(Integer purchaseOrderId) {
        this.purchaseOrderId = purchaseOrderId;
    }

    public Integer getCustomerOrderId() {
        return this.customerOrderId;
    }

    public void setCustomerOrderId(Integer customerOrderId) {
        this.customerOrderId = customerOrderId;
    }

    public String getComments() {
        return this.comments;
    }

    public void setComments(String comments) {
        this.comments = comments;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("InventoryTransactions (");

        sb.append(id);
        sb.append(", ").append(transactionType);
        sb.append(", ").append(transactionCreatedDate);
        sb.append(", ").append(transactionModifiedDate);
        sb.append(", ").append(productId);
        sb.append(", ").append(quantity);
        sb.append(", ").append(purchaseOrderId);
        sb.append(", ").append(customerOrderId);
        sb.append(", ").append(comments);

        sb.append(")");
        return sb.toString();
    }
}
