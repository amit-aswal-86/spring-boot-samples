/*
 * This file is generated by jOOQ.
 */
package com.jooq.example.domain.tables.records;


import com.jooq.example.domain.tables.SalesReports;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SalesReportsRecord extends UpdatableRecordImpl<SalesReportsRecord> implements Record5<String, String, String, String, Byte> {

    private static final long serialVersionUID = -758303461;

    /**
     * Setter for <code>northwind.sales_reports.group_by</code>.
     */
    public void setGroupBy(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>northwind.sales_reports.group_by</code>.
     */
    public String getGroupBy() {
        return (String) get(0);
    }

    /**
     * Setter for <code>northwind.sales_reports.display</code>.
     */
    public void setDisplay(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>northwind.sales_reports.display</code>.
     */
    public String getDisplay() {
        return (String) get(1);
    }

    /**
     * Setter for <code>northwind.sales_reports.title</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>northwind.sales_reports.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>northwind.sales_reports.filter_row_source</code>.
     */
    public void setFilterRowSource(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>northwind.sales_reports.filter_row_source</code>.
     */
    public String getFilterRowSource() {
        return (String) get(3);
    }

    /**
     * Setter for <code>northwind.sales_reports.default</code>.
     */
    public void setDefault(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>northwind.sales_reports.default</code>.
     */
    public Byte getDefault() {
        return (Byte) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, Byte> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, String, Byte> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return SalesReports.SALES_REPORTS.GROUP_BY;
    }

    @Override
    public Field<String> field2() {
        return SalesReports.SALES_REPORTS.DISPLAY;
    }

    @Override
    public Field<String> field3() {
        return SalesReports.SALES_REPORTS.TITLE;
    }

    @Override
    public Field<String> field4() {
        return SalesReports.SALES_REPORTS.FILTER_ROW_SOURCE;
    }

    @Override
    public Field<Byte> field5() {
        return SalesReports.SALES_REPORTS.DEFAULT;
    }

    @Override
    public String component1() {
        return getGroupBy();
    }

    @Override
    public String component2() {
        return getDisplay();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public String component4() {
        return getFilterRowSource();
    }

    @Override
    public Byte component5() {
        return getDefault();
    }

    @Override
    public String value1() {
        return getGroupBy();
    }

    @Override
    public String value2() {
        return getDisplay();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public String value4() {
        return getFilterRowSource();
    }

    @Override
    public Byte value5() {
        return getDefault();
    }

    @Override
    public SalesReportsRecord value1(String value) {
        setGroupBy(value);
        return this;
    }

    @Override
    public SalesReportsRecord value2(String value) {
        setDisplay(value);
        return this;
    }

    @Override
    public SalesReportsRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public SalesReportsRecord value4(String value) {
        setFilterRowSource(value);
        return this;
    }

    @Override
    public SalesReportsRecord value5(Byte value) {
        setDefault(value);
        return this;
    }

    @Override
    public SalesReportsRecord values(String value1, String value2, String value3, String value4, Byte value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SalesReportsRecord
     */
    public SalesReportsRecord() {
        super(SalesReports.SALES_REPORTS);
    }

    /**
     * Create a detached, initialised SalesReportsRecord
     */
    public SalesReportsRecord(String groupBy, String display, String title, String filterRowSource, Byte default_) {
        super(SalesReports.SALES_REPORTS);

        set(0, groupBy);
        set(1, display);
        set(2, title);
        set(3, filterRowSource);
        set(4, default_);
    }
}
